#---------------------------------------
#    ALL STAGES OF CI / CD SCRIPT
#---------------------------------------
stages:
  - setup
  - pkg_clone
  - pkg_setup
  - using_pkg
  - pkg_test_sub
  - pkg_test_main
  - own_test
  - cleanup_julia
  - cleanup_final




#---------------------------------------
#    STAGE: julia_setup
#    --> add stuff to julia env
#---------------------------------------
julia_version_test:
  script:
    - which julia
    - julia --version
  stage: setup

julia_test:
  script:
    - julia -e "println(\"hello World\")"
  stage: setup

current_dir_info:
  script:
    - pwd
    - ls -lRh
  stage: setup

pkg_env_setup:
  script:
    - ls -lh ~/.julia/dev/
    - julia -e "using Pkg; pkg\"rm BenchmarkTools\";"
    - julia -e "using Pkg; pkg\"rm PyPlot\";"
    - julia -e "using Pkg; pkg\"rm LatPhysBase\";"
    - julia -e "using Pkg; pkg\"rm LatPhysUnitcellLibrary\";"
    - julia -e "using Pkg; pkg\"rm LatPhysLatticeConstruction\";"
    - julia -e "using Pkg; pkg\"rm LatPhysLatticeModification\";"
    - julia -e "using Pkg; pkg\"rm LatPhysReciprocal\";"
    - julia -e "using Pkg; pkg\"rm LatticePhysics\";"
    - julia -e "using Pkg; pkg\"rm LatPhysPlottingPyPlot\";"
    - julia -e "using Pkg; pkg\"rm LatPhysPlottingSVG\";"
    - julia -e "using Pkg; pkg\"rm LatPhysReciprocalPlottingPyPlot\";"
    - julia -e "using Pkg; pkg\"gc\""
    - julia -e "using Pkg; pkg\"resolve\""
    - julia -e "using Pkg; pkg\"st\";"
    - rm -rf ~/.julia/dev/*
    - julia -e "using Pkg; pkg\"up\";"
    - julia -e "using Pkg; pkg\"st\";"
    - julia -e "using Pkg; pkg\"gc\";"
  stage: setup



#---------------------------------------
#    STAGE: pkg_clone
#    --> git clone all packagess
#---------------------------------------

pkgcl_LatPhysBase:
  script:
    - git clone http://gitlab+deploy-token-2:MgoW2PxpGUsJfSs2xgRA@gitsrv.thp.uni-koeln.de/attig/LatPhysBase.jl.git ~/.julia/dev/LatPhysBase.jl
  stage: pkg_clone

pkgcl_LatPhysLatticeConstruction:
  script:
    - git clone http://gitlab+deploy-token-4:eUzQMQzm7PyL7-SK-p7W@gitsrv.thp.uni-koeln.de/attig/LatPhysLatticeConstruction.jl.git ~/.julia/dev/LatPhysLatticeConstruction.jl
  stage: pkg_clone

pkgcl_LatPhysReciprocal:
  script:
    - git clone http://gitlab+deploy-token-5:wPaiSRbW8ppPdyozm-Kk@gitsrv.thp.uni-koeln.de/attig/LatPhysReciprocal.jl.git ~/.julia/dev/LatPhysReciprocal.jl
  stage: pkg_clone




#---------------------------------------
#    STAGE: julia_pkg_setup
#    --> add packages to julia env
#---------------------------------------
pkg_env_adding:
  script:
    - julia -e "using Pkg; pkg\"add BenchmarkTools\";"
    - julia -e "using Pkg; pkg\"add Reexport\";"
    - julia -e "using Pkg; ENV[\"PYTHON\"]=\"\"; pkg\"add PyPlot\";"
    - julia -e "ENV[\"PYTHON\"]=\"\"; using Pkg; pkg\"build PyCall\""
    - julia -e "using Pkg; pkg\"dev ~/.julia/dev/LatPhysBase.jl\";"
    - julia -e "using Pkg; pkg\"dev ~/.julia/dev/LatPhysLatticeConstruction.jl\";"
    - julia -e "using Pkg; pkg\"dev ~/.julia/dev/LatPhysReciprocal.jl\";"
    - julia -e "using Pkg; pkg\"dev ../LatPhysReciprocalPlottingPyPlot.jl\";"
    - julia -e "using Pkg; pkg\"resolve\""
    - julia -e "using Pkg; pkg\"precompile\""
    - julia -e "using Pkg; pkg\"build LatPhysBase\""
    - julia -e "using Pkg; pkg\"build LatPhysReciprocal\""
    - julia -e "using Pkg; pkg\"st\""
  stage: pkg_setup

#---------------------------------------
#    STAGE: using_pkg
#    --> tests if "using package" works
#---------------------------------------
test_using:
  script:
    - julia -e "using LatPhysReciprocalPlottingPyPlot"
  stage: using_pkg


#---------------------------------------
#    STAGE: pkg_test_main
#    --> tests if "test package" works
#---------------------------------------
main_pkg_test:
  script:
    - julia -e "using Pkg; pkg\"test LatPhysReciprocalPlottingPyPlot\""
  stage: pkg_test_main


#---------------------------------------
#    STAGE: own_test
#    --> self defined tests
#---------------------------------------


#---------------------------------------
#    STAGE: cleanup_julia
#    --> remove stuff from julia env
#---------------------------------------
pkg_env_removing:
  script:
    - julia -e "using Pkg; pkg\"rm BenchmarkTools\";"
    - julia -e "using Pkg; pkg\"rm PyPlot\";"
    - julia -e "using Pkg; pkg\"rm LatPhysBase\";"
    - julia -e "using Pkg; pkg\"rm LatPhysLatticeConstruction\";"
    - julia -e "using Pkg; pkg\"rm LatPhysReciprocal\";"
    - julia -e "using Pkg; pkg\"rm LatPhysReciprocalPlottingPyPlot\";"
    - julia -e "using Pkg; pkg\"gc\""
  stage: cleanup_julia

#---------------------------------------
#    STAGE: cleanup_final
#    --> remove stuff from directory
#    --> remove stuff from julia env
#---------------------------------------
cleanup_directory:
  script:
    - pwd
    - rm -rf *
    - rm -rf ~/.julia/dev/*
    - ls -lRh
  stage: cleanup_final
